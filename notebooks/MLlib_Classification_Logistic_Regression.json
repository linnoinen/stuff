{"paragraphs":[{"text":"%pyspark\nprint sc.version\n","user":"klinnoinen","dateUpdated":"2018-02-15T09:28:20+0000","config":{"colWidth":3,"editorMode":"ace/mode/python","results":{"0":{"graph":{"mode":"table","height":93,"optionOpen":false}}},"enabled":true,"editorSetting":{"language":"python","editOnDblClick":false}},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1518423298743_497695010","id":"20171120-172623_1771933655","dateCreated":"2018-02-12T08:14:58+0000","dateStarted":"2018-02-15T09:28:20+0000","dateFinished":"2018-02-15T09:28:47+0000","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:9427"},{"text":"%pyspark\nspark.stop()","dateUpdated":"2018-02-12T08:14:58+0000","config":{"colWidth":4,"editorMode":"ace/mode/python","results":{},"enabled":true,"editorSetting":{"language":"python"}},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1518423298744_495771265","id":"20180208-140349_1986659961","dateCreated":"2018-02-12T08:14:58+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:9428"},{"text":"%md\n## MLlib: Classification with Logistic Regression\n","dateUpdated":"2018-02-19T13:56:15+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true},"colWidth":12,"editorMode":"ace/mode/markdown","editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1518423298744_495771265","id":"20180124-143232_1549390359","dateCreated":"2018-02-12T08:14:58+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:9429","user":"klinnoinen","dateFinished":"2018-02-19T13:56:16+0000","dateStarted":"2018-02-19T13:56:15+0000","results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h2>MLlib: Classification with Logistic Regression</h2>\n</div>"}]}},{"text":"%sh\necho \"local files:\"\necho \"+++++++++++++\"\nls -l /tmp/*.gz\necho \"hdfs files:\"\necho \"+++++++++++++\"\nhdfs dfs -ls /tmp/*.gz","user":"klinnoinen","dateUpdated":"2018-02-15T09:29:45+0000","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"sh","editOnDblClick":false},"editorMode":"ace/mode/sh"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1518685544102_-759112757","id":"20180215-090544_1513814468","dateCreated":"2018-02-15T09:05:44+0000","dateStarted":"2018-02-15T09:29:45+0000","dateFinished":"2018-02-15T09:29:47+0000","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:9430"},{"text":"%md\n#### Download data","user":"klinnoinen","dateUpdated":"2018-02-19T13:56:18+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true},"colWidth":12,"editorMode":"ace/mode/markdown","editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1518423298745_495386516","id":"20180124-174139_415750136","dateCreated":"2018-02-12T08:14:58+0000","dateStarted":"2018-02-19T13:56:18+0000","dateFinished":"2018-02-19T13:56:18+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:9431","results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h4>Download data</h4>\n</div>"}]}},{"text":"%spark2.pyspark\nimport urllib\nf = urllib.urlretrieve (\"http://kdd.ics.uci.edu/databases/kddcup99/kddcup.data.gz\", \"/tmp/kddcup.data.gz\")\nft = urllib.urlretrieve(\"http://kdd.ics.uci.edu/databases/kddcup99/corrected.gz\", \"/tmp/corrected.gz\")","user":"klinnoinen","dateUpdated":"2018-02-15T09:10:59+0000","config":{"colWidth":12,"editorMode":"ace/mode/python","results":{},"enabled":true,"editorSetting":{"language":"python","editOnDblClick":false}},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1518423298745_495386516","id":"20180124-110511_1433257955","dateCreated":"2018-02-12T08:14:58+0000","dateStarted":"2018-02-15T09:10:59+0000","dateFinished":"2018-02-15T09:11:09+0000","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:9432"},{"text":"%sh\nls -l /tmp/*.gz\nhdfs dfs -put /tmp/kddcup.data.gz /tmp\nhdfs dfs -put /tmp/corrected.gz /tmp","user":"klinnoinen","dateUpdated":"2018-02-15T09:11:21+0000","config":{"colWidth":12,"editorMode":"ace/mode/sh","results":{},"enabled":true,"editorSetting":{"language":"sh","editOnDblClick":false}},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1518423298745_495386516","id":"20180124-135830_1548037745","dateCreated":"2018-02-12T08:14:58+0000","dateStarted":"2018-02-15T09:11:21+0000","dateFinished":"2018-02-15T09:11:26+0000","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:9433"},{"text":"%md\n#### Row count\nLet's do a quick row count for both data sets ","user":"klinnoinen","dateUpdated":"2018-02-19T13:56:20+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true},"colWidth":12,"editorMode":"ace/mode/markdown","editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1518423298746_496540763","id":"20180124-174152_967567759","dateCreated":"2018-02-12T08:14:58+0000","dateStarted":"2018-02-19T13:56:20+0000","dateFinished":"2018-02-19T13:56:20+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:9434","results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h4>Row count</h4>\n<p>Let&rsquo;s do a quick row count for both data sets</p>\n</div>"}]}},{"text":"%spark2.pyspark\ndata_file = \"/tmp/kddcup.data.gz\"\nraw_data = sc.textFile(data_file)\n\nprint \"Training dataset size is {} rows\".format(raw_data.count())","user":"klinnoinen","dateUpdated":"2018-02-15T09:29:58+0000","config":{"colWidth":6,"editorMode":"ace/mode/python","results":{},"enabled":true,"editorSetting":{"language":"python","editOnDblClick":false}},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1518423298746_496540763","id":"20180124-135114_1426753419","dateCreated":"2018-02-12T08:14:58+0000","dateStarted":"2018-02-15T09:29:59+0000","dateFinished":"2018-02-15T09:30:15+0000","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:9435"},{"text":"%spark2.pyspark\ntest_data_file = \"/tmp/corrected.gz\"\ntest_raw_data = sc.textFile(test_data_file)\n\nprint \"Test dataset size is {} rows\".format(test_raw_data.count())","user":"klinnoinen","dateUpdated":"2018-02-15T09:30:00+0000","config":{"colWidth":6,"editorMode":"ace/mode/python","results":{},"enabled":true,"editorSetting":{"language":"python","editOnDblClick":false}},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1518423298747_496156014","id":"20180124-140951_1947606932","dateCreated":"2018-02-12T08:14:58+0000","dateStarted":"2018-02-15T09:30:01+0000","dateFinished":"2018-02-15T09:30:17+0000","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:9436"},{"title":"Prep training data","text":"%spark2.pyspark\nfrom pyspark.mllib.regression import LabeledPoint\nfrom numpy import array\n\ndef parse_interaction(line):\n    line_split = line.split(\",\")\n    # leave_out = [1,2,3,41]\n    clean_line_split = line_split[0:1]+line_split[4:41]\n    attack = 1.0\n    if line_split[41]=='normal.':\n        attack = 0.0\n    return LabeledPoint(attack, array([float(x) for x in clean_line_split]))\n\ntraining_data = raw_data.map(parse_interaction)\n","user":"klinnoinen","dateUpdated":"2018-02-15T09:31:00+0000","config":{"colWidth":12,"editorMode":"ace/mode/python","results":{},"enabled":true,"editorSetting":{"language":"python","editOnDblClick":false},"title":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1518423298748_494232270","id":"20180124-141024_586330326","dateCreated":"2018-02-12T08:14:58+0000","dateStarted":"2018-02-15T09:31:00+0000","dateFinished":"2018-02-15T09:31:00+0000","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:9437"},{"title":"Prep test data","text":"%spark2.pyspark\ntest_data = test_raw_data.map(parse_interaction)","user":"klinnoinen","dateUpdated":"2018-02-15T09:31:05+0000","config":{"colWidth":12,"editorMode":"ace/mode/python","results":{},"enabled":true,"editorSetting":{"language":"python","editOnDblClick":false},"title":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1518423298748_494232270","id":"20180124-141051_768363221","dateCreated":"2018-02-12T08:14:58+0000","dateStarted":"2018-02-15T09:31:05+0000","dateFinished":"2018-02-15T09:31:05+0000","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:9438"},{"text":"%md\n### Train model with data\n","user":"klinnoinen","dateUpdated":"2018-02-19T13:56:23+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true},"colWidth":12,"editorMode":"ace/mode/markdown","editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1518423298749_493847521","id":"20180124-174219_690040520","dateCreated":"2018-02-12T08:14:58+0000","dateStarted":"2018-02-19T13:56:23+0000","dateFinished":"2018-02-19T13:56:23+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:9439","results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h3>Train model with data</h3>\n</div>"}]}},{"text":"%spark2.pyspark\nfrom pyspark.mllib.classification import LogisticRegressionWithLBFGS\nfrom time import time\n\n# Build the model\nt0 = time()\nlogit_model = LogisticRegressionWithLBFGS.train(training_data)\ntt = time() - t0\n\nprint \"Classifier trained in {} seconds\".format(round(tt,3))","user":"klinnoinen","dateUpdated":"2018-02-15T09:31:15+0000","config":{"colWidth":12,"editorMode":"ace/mode/python","results":{},"enabled":true,"editorSetting":{"language":"python","editOnDblClick":false}},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1518423298750_495001768","id":"20180124-141103_187557522","dateCreated":"2018-02-12T08:14:58+0000","dateStarted":"2018-02-15T09:31:15+0000","dateFinished":"2018-02-15T09:40:43+0000","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:9440"},{"title":"Evaluate model on new data","text":"%spark2.pyspark\nlabels_and_preds = test_data.map(lambda p: (p.label, logit_model.predict(p.features)))","user":"klinnoinen","dateUpdated":"2018-02-15T09:42:53+0000","config":{"colWidth":12,"editorMode":"ace/mode/python","results":{},"enabled":true,"editorSetting":{"language":"python","editOnDblClick":false},"title":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1518423298751_494617019","id":"20180124-141123_1748410553","dateCreated":"2018-02-12T08:14:58+0000","dateStarted":"2018-02-15T09:41:03+0000","dateFinished":"2018-02-15T09:41:03+0000","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:9441"},{"title":"Prediction time and accuracy","text":"%spark2.pyspark\nt0 = time()\ntest_accuracy = labels_and_preds.filter(lambda (v, p): v == p).count() / float(test_data.count())\ntt = time() - t0\n\nprint \"Prediction made in {} seconds. Test accuracy is {}\".format(round(tt,3), round(test_accuracy,4))\n","user":"klinnoinen","dateUpdated":"2018-02-15T09:47:13+0000","config":{"colWidth":12,"editorMode":"ace/mode/python","results":{},"enabled":true,"editorSetting":{"language":"python"},"title":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1518423298751_494617019","id":"20180208-143256_1253419612","dateCreated":"2018-02-12T08:14:58+0000","dateStarted":"2018-02-15T09:41:20+0000","dateFinished":"2018-02-15T09:41:38+0000","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:9442"},{"title":"Evaluate new model","text":"%spark2.pyspark\ndef parse_interaction_corr(line):\n    line_split = line.split(\",\")\n    # leave_out = [1,2,3,25,27,35,38,40,41]\n    clean_line_split = line_split[0:1]+line_split[4:25]+line_split[26:27]+line_split[28:35]+line_split[36:38]+line_split[39:40]\n    attack = 1.0\n    if line_split[41]=='normal.':\n        attack = 0.0\n    return LabeledPoint(attack, array([float(x) for x in clean_line_split]))\n\ncorr_reduced_training_data = raw_data.map(parse_interaction_corr)\ncorr_reduced_test_data = test_raw_data.map(parse_interaction_corr)","user":"klinnoinen","dateUpdated":"2018-02-15T09:43:05+0000","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"python"},"editorMode":"ace/mode/python","title":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1518687680178_458097013","id":"20180215-094120_1267622276","dateCreated":"2018-02-15T09:41:20+0000","dateStarted":"2018-02-15T09:43:05+0000","dateFinished":"2018-02-15T09:43:05+0000","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:9443"},{"title":"Train model","text":"%spark2.pyspark\n# Build the model\nt0 = time()\nlogit_model_2 = LogisticRegressionWithLBFGS.train(corr_reduced_training_data)\ntt = time() - t0\n\nprint \"Classifier trained in {} seconds\".format(round(tt,3))","user":"klinnoinen","dateUpdated":"2018-02-15T09:43:35+0000","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"python"},"editorMode":"ace/mode/python","title":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1518687785113_957237285","id":"20180215-094305_1431903390","dateCreated":"2018-02-15T09:43:05+0000","dateStarted":"2018-02-15T09:43:36+0000","dateFinished":"2018-02-15T09:52:27+0000","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:9444"},{"title":"Prediction time and accuracy","text":"%spark2.pyspark\nlabels_and_preds = corr_reduced_test_data.map(lambda p: (p.label, logit_model_2.predict(p.features)))\nt0 = time()\ntest_accuracy = labels_and_preds.filter(lambda (v, p): v == p).count() / float(corr_reduced_test_data.count())\ntt = time() - t0\n\nprint \"Prediction made in {} seconds. Test accuracy is {}\".format(round(tt,3), round(test_accuracy,4))","user":"klinnoinen","dateUpdated":"2018-02-15T09:52:32+0000","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"python"},"editorMode":"ace/mode/python","title":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1518687815972_-630374594","id":"20180215-094335_795989852","dateCreated":"2018-02-15T09:43:35+0000","dateStarted":"2018-02-15T09:52:33+0000","dateFinished":"2018-02-15T09:52:50+0000","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:9445"},{"text":"%md\n# Hypothesis testing","user":"klinnoinen","dateUpdated":"2018-02-19T13:56:26+0000","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"markdown","editOnDblClick":true},"editorMode":"ace/mode/markdown","editorHide":true,"tableHide":false},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1518687903498_2097433811","id":"20180215-094503_961118344","dateCreated":"2018-02-15T09:45:03+0000","dateStarted":"2018-02-19T13:56:26+0000","dateFinished":"2018-02-19T13:56:26+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:9446","results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h1>Hypothesis testing</h1>\n</div>"}]}},{"text":"%spark2.pyspark\nfeature_names = [\"land\",\"wrong_fragment\",\n             \"urgent\",\"hot\",\"num_failed_logins\",\"logged_in\",\"num_compromised\",\n             \"root_shell\",\"su_attempted\",\"num_root\",\"num_file_creations\",\n             \"num_shells\",\"num_access_files\",\"num_outbound_cmds\",\n             \"is_hot_login\",\"is_guest_login\",\"count\",\"srv_count\",\"serror_rate\",\n             \"srv_serror_rate\",\"rerror_rate\",\"srv_rerror_rate\",\"same_srv_rate\",\n             \"diff_srv_rate\",\"srv_diff_host_rate\",\"dst_host_count\",\"dst_host_srv_count\",\n             \"dst_host_same_srv_rate\",\"dst_host_diff_srv_rate\",\"dst_host_same_src_port_rate\",\n             \"dst_host_srv_diff_host_rate\",\"dst_host_serror_rate\",\"dst_host_srv_serror_rate\",\n             \"dst_host_rerror_rate\",\"dst_host_srv_rerror_rate\"]","user":"klinnoinen","dateUpdated":"2018-02-15T11:12:20+0000","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"python"},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1518687893887_1512600159","id":"20180215-094453_587165257","dateCreated":"2018-02-15T09:44:53+0000","dateStarted":"2018-02-15T11:12:20+0000","dateFinished":"2018-02-15T11:12:20+0000","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:9447"},{"text":"%spark2.pyspark\ndef parse_interaction_categorical(line):\n    line_split = line.split(\",\")\n    clean_line_split = line_split[6:41]\n    attack = 1.0\n    if line_split[41]=='normal.':\n        attack = 0.0\n    return LabeledPoint(attack, array([float(x) for x in clean_line_split]))\n\ntraining_data_categorical = raw_data.map(parse_interaction_categorical)","user":"klinnoinen","dateUpdated":"2018-02-15T11:16:26+0000","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"python"},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1518693140841_-1842225018","id":"20180215-111220_2092591933","dateCreated":"2018-02-15T11:12:20+0000","dateStarted":"2018-02-15T11:16:26+0000","dateFinished":"2018-02-15T11:16:27+0000","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:9448"},{"text":"%spark2.pyspark\nfrom pyspark.mllib.stat import Statistics\nchi = Statistics.chiSqTest(training_data_categorical)","user":"klinnoinen","dateUpdated":"2018-02-15T11:16:41+0000","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"python"},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1518693386878_2096417179","id":"20180215-111626_704546048","dateCreated":"2018-02-15T11:16:26+0000","dateStarted":"2018-02-15T11:16:41+0000","dateFinished":"2018-02-15T11:18:55+0000","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:9449"},{"title":"Check results","text":"%spark2.pyspark\nimport pandas as pd\npd.set_option('display.max_colwidth', 30)\n\nrecords = [(result.statistic, result.pValue) for result in chi]\n\nchi_df = pd.DataFrame(data=records, index= feature_names, columns=[\"Statistic\",\"p-value\"])\n\nchi_df","user":"klinnoinen","dateUpdated":"2018-02-15T11:26:10+0000","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"python"},"editorMode":"ace/mode/python","title":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1518693401827_-849974574","id":"20180215-111641_602189456","dateCreated":"2018-02-15T11:16:41+0000","dateStarted":"2018-02-15T11:26:10+0000","dateFinished":"2018-02-15T11:26:10+0000","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:9450"},{"text":"%md\n#### Evaluate new model\n","user":"klinnoinen","dateUpdated":"2018-02-19T13:56:29+0000","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"markdown","editOnDblClick":true},"editorMode":"ace/mode/markdown","editorHide":true,"tableHide":false},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1518693987483_-1364728087","id":"20180215-112627_1635417320","dateCreated":"2018-02-15T11:26:27+0000","dateStarted":"2018-02-19T13:56:29+0000","dateFinished":"2018-02-19T13:56:29+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:9451","results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h4>Evaluate new model</h4>\n</div>"}]}},{"text":"%spark2.pyspark\ndef parse_interaction_chi(line):\n    line_split = line.split(\",\")\n    # leave_out = [1,2,3,6,19,41]\n    clean_line_split = line_split[0:1] + line_split[4:6] + line_split[7:19] + line_split[20:41]\n    attack = 1.0\n    if line_split[41]=='normal.':\n        attack = 0.0\n    return LabeledPoint(attack, array([float(x) for x in clean_line_split]))\n\ntraining_data_chi = raw_data.map(parse_interaction_chi)\ntest_data_chi = test_raw_data.map(parse_interaction_chi)","user":"klinnoinen","dateUpdated":"2018-02-15T11:26:51+0000","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"python"},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1518693970095_2127806245","id":"20180215-112610_1461905979","dateCreated":"2018-02-15T11:26:10+0000","dateStarted":"2018-02-15T11:26:51+0000","dateFinished":"2018-02-15T11:26:51+0000","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:9452"},{"title":"Build model","text":"%spark2.pyspark\n# Build the model\nt0 = time()\nlogit_model_chi = LogisticRegressionWithLBFGS.train(training_data_chi)\ntt = time() - t0\n\nprint \"Classifier trained in {} seconds\".format(round(tt,3))","user":"klinnoinen","dateUpdated":"2018-02-15T11:27:09+0000","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"python"},"editorMode":"ace/mode/python","title":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1518694011764_-2019924815","id":"20180215-112651_326644316","dateCreated":"2018-02-15T11:26:51+0000","dateStarted":"2018-02-15T11:27:09+0000","dateFinished":"2018-02-15T11:35:58+0000","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:9453"},{"title":"Evaluate results and accuracy","text":"%spark2.pyspark\nlabels_and_preds = test_data_chi.map(lambda p: (p.label, logit_model_chi.predict(p.features)))\nt0 = time()\ntest_accuracy = labels_and_preds.filter(lambda (v, p): v == p).count() / float(test_data_chi.count())\ntt = time() - t0\n\nprint \"Prediction made in {} seconds. Test accuracy is {}\".format(round(tt,3), round(test_accuracy,4))","user":"klinnoinen","dateUpdated":"2018-02-15T11:36:58+0000","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"python"},"editorMode":"ace/mode/python","title":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1518694029583_1279327652","id":"20180215-112709_809990520","dateCreated":"2018-02-15T11:27:09+0000","dateStarted":"2018-02-15T11:36:59+0000","dateFinished":"2018-02-15T11:37:17+0000","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:9454"},{"text":"%spark2.pyspark\n","user":"klinnoinen","dateUpdated":"2018-02-15T11:36:58+0000","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"python"},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1518694618975_192409243","id":"20180215-113658_1694428029","dateCreated":"2018-02-15T11:36:58+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:9455"}],"name":"/Development/MLlib 1","id":"2D85RF1K6","angularObjects":{"2C8A4SZ9T_livy2:shared_process":[],"2D65U3YVP:klinnoinen:":[],"2D8CEQZQG:shared_process":[],"2D8GMAMUB:shared_process":[],"2C4U48MY3_spark2:shared_process":[],"2D5W64A4H:shared_process":[]},"config":{"looknfeel":"default","personalizedMode":"false"},"info":{}}